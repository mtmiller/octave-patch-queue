# HG changeset patch
# Parent 447038c2dde8236489a50bbc283045fac8efd4a4
edit.m: Use current working directory for all new or copied files

* edit.m: Use pwd in place of HOME, warn user if HOME variable is still
used.  Update docstring for new behavior.

diff --git a/scripts/miscellaneous/edit.m b/scripts/miscellaneous/edit.m
--- a/scripts/miscellaneous/edit.m
+++ b/scripts/miscellaneous/edit.m
@@ -29,8 +29,8 @@
 ## @item
 ## If the function @var{name} is available in a file on your path and
 ## that file is modifiable, then it will be edited in place.  If it
-## is a system function, then it will first be copied to the directory
-## @env{HOME} (see further down) and then edited.
+## is a system function, then it will first be copied to the current
+## working directory and then edited.
 ## If no file is found, then the m-file
 ## variant, ending with ".m", will be considered.  If still no file
 ## is found, then variants with a leading "@@" and then with both a
@@ -38,21 +38,21 @@
 ##
 ## @item
 ## If @var{name} is the name of a function defined in the interpreter but
-## not in an m-file, then an m-file will be created in @env{HOME}
-## to contain that function along with its current definition.
+## not in an m-file, then an m-file will be created in the current working
+## directory to contain that function along with its current definition.
 ##
 ## @item
 ## If @code{name.cc} is specified, then it will search for @code{name.cc}
 ## in the path and try to modify it, otherwise it will create a new
-## @file{.cc} file in @env{HOME}.  If @var{name} happens to be an
-## m-file or interpreter defined function, then the text of that
+## @file{.cc} file in the current working directory.  If @var{name} happens
+## to be an m-file or interpreter defined function, then the text of that
 ## function will be inserted into the .cc file as a comment.
 ##
 ## @item
 ## If @var{name.ext} is on your path then it will be edited, otherwise
-## the editor will be started with @file{HOME/name.ext} as the
+## the editor will be started with @file{name.ext} as the
 ## filename.  If @file{name.ext} is not modifiable, it will be copied to
-## @env{HOME} before editing.
+## the current working directory before editing.
 ##
 ## @strong{Warning:} You may need to clear name before the new definition
 ## is available.  If you are editing a .cc file, you will need
@@ -96,10 +96,6 @@
 ## @exdent '"C:/Program Files/Good Editor/Editor.exe" "$(cygpath -wa %s)"'
 ## @end smallexample
 ##
-## @item home
-## This is the location of user local m-files.  Be be sure it is in your
-## path.  The default is @file{~/octave}.
-##
 ## @item author
 ## This is the name to put after the "## Author:" field of new functions.
 ## By default it guesses from the @code{gecos} field of password database.
@@ -151,7 +147,6 @@
   ## Pick up globals or default them.
 
   persistent FUNCTION = struct ("EDITOR", cstrcat (EDITOR (), " %s"),
-                                "HOME", fullfile (default_home, "octave"),
                                 "AUTHOR", default_user(1),
                                 "EMAIL",  [],
                                 "LICENSE",  "GPL",
@@ -165,10 +160,7 @@
     case "EDITOR"
       FUNCTION.EDITOR = state;
     case "HOME"
-      if (! isempty (state) && state(1) == "~")
-        state = [ default_home, state(2:end) ];
-      endif
-      FUNCTION.HOME = state;
+      warning ("edit: HOME is no longer supported");
     case "AUTHOR"
       FUNCTION.AUTHOR = state;
     case "EMAIL"
@@ -195,24 +187,21 @@
     case "GET"
       if (isfield (FUNCTION, toupper(state)))
         ret = FUNCTION.(toupper (state));
+      elseif (strcmpi (state, "HOME"))
+        warning ("edit: HOME is no longer supported");
+        ret = "";
       else
         ret = FUNCTION;
       endif
     otherwise
-      error ('edit: expected "edit EDITOR|HOME|AUTHOR|EMAIL|LICENSE|MODE val"');
+      error ('edit: expected "edit EDITOR|AUTHOR|EMAIL|LICENSE|MODE val"');
     endswitch
     return
   endif
 
   ## Start the editor without a file if no file is given.
   if (nargin < 1)
-    if (exist (FUNCTION.HOME, "dir") == 7 && (isunix () || ! ispc ()))
-      system (cstrcat ("cd \"", FUNCTION.HOME, "\" ; ",
-                      sprintf (FUNCTION.EDITOR, "")),
-              [], FUNCTION.MODE);
-    else
-      system (sprintf (FUNCTION.EDITOR,""), [], FUNCTION.MODE);
-    endif
+    system (sprintf (FUNCTION.EDITOR,""), [], FUNCTION.MODE);
     return;
   endif
 
@@ -286,11 +275,11 @@
       return;
     else
       ## If the file is modifiable in place then edit it, otherwise make
-      ## a copy in HOME and then edit it.
+      ## a copy in pwd and then edit it.
       fid = fopen (fileandpath, "r+t");
       if (fid < 0)
         from = fileandpath;
-        fileandpath = cstrcat (FUNCTION.HOME, from (rindex (from, filesep):end));
+        fileandpath = cstrcat (pwd (), from (rindex (from, filesep):end));
         [status, msg] = copyfile (from, fileandpath, 1);
         if (status == 0)
           error (msg);
@@ -466,20 +455,6 @@
 
 endfunction
 
-function ret = default_home ()
-
-  ret = getenv ("HOME");
-  if (isempty (ret))
-    ret = glob ("~");
-    if (! isempty (ret))
-      ret = ret{1};
-    else
-      ret = "";
-    endif
-  endif
-
-endfunction
-
 ## Return the name associated with the current user ID.
 ##
 ## If LONG_FORM is 1, return the full name.  This will be the
@@ -509,14 +484,12 @@
 
 %!test
 %! s.editor = edit ("get", "editor");
-%! s.home = edit ("get", "home");
 %! s.author = edit ("get", "author");
 %! s.email = edit ("get", "email");
 %! s.license = edit ("get", "license");
 %! s.editinplace = edit ("get", "editinplace");
 %! s.mode = edit ("get", "mode");
 %! edit editor none
-%! edit home none
 %! edit author none
 %! edit email none
 %! edit license none
@@ -527,14 +500,12 @@
 %!   edit mode async
 %! endif
 %! edit ("editor", s.editor);
-%! edit ("home", s.home);
 %! edit ("author", s.author);
 %! edit ("email", s.email);
 %! edit ("license", s.license);
 %! edit ("editinplace", s.editinplace);
 %! edit ("mode", s.mode);
 %! assert (edit ("get", "editor"), s.editor);
-%! assert (edit ("get", "home"), s.home);
 %! assert (edit ("get", "author"), s.author);
 %! assert (edit ("get", "email"), s.email);
 %! assert (edit ("get", "license"), s.license);
